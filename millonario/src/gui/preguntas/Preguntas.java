/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.preguntas;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;
import logica.Pregunta;
import millonario.Millonario;

/**
 *
 * @author scot3004
 */
public class Preguntas extends javax.swing.JFrame implements ActionListener,
    PropertyChangeListener {

    List<Preguntas> preguntas = new ArrayList<>();
    millonario.Millonario millonario = new Millonario();
    Pregunta actual;
    boolean continuar = true;
    boolean timer;

    /**
     * Creates new form Preguntas
     */
    public Preguntas() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRespuestas = new javax.swing.JPanel();
        prgTiempo = new javax.swing.JProgressBar();
        txtGanado = new javax.swing.JFormattedTextField();
        btnContinuar = new javax.swing.JButton();
        btnRetirarse = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        lblPregunta = new javax.swing.JLabel();
        txtAsegurado = new javax.swing.JFormattedTextField();
        btnAyuda50 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlRespuestas.setBorder(javax.swing.BorderFactory.createTitledBorder("Presione su respuesta"));
        pnlRespuestas.setLayout(new java.awt.GridLayout(0, 1));

        prgTiempo.setStringPainted(true);

        txtGanado.setEditable(false);
        txtGanado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        txtGanado.setValue(0);

        btnContinuar.setText("Continuar");
        btnContinuar.setEnabled(false);
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });

        btnRetirarse.setText("Retirarse");
        btnRetirarse.setEnabled(false);
        btnRetirarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarseActionPerformed(evt);
            }
        });

        btnReset.setText("Iniciar Juego");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblPregunta.setLabelFor(pnlRespuestas);
        lblPregunta.setText("pregunta");

        txtAsegurado.setEditable(false);
        txtAsegurado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        txtAsegurado.setValue(0);

        btnAyuda50.setText("50/50");
        btnAyuda50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyuda50ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPregunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlRespuestas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(txtAsegurado, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGanado, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prgTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAyuda50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnContinuar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRetirarse)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGanado)
                        .addComponent(txtAsegurado))
                    .addComponent(prgTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(lblPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlRespuestas, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnContinuar)
                    .addComponent(btnRetirarse)
                    .addComponent(btnAyuda50)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
        pnlRespuestas.removeAll();
        continuar = true;
        cargarPregunta();
        btnContinuar.setEnabled(false);
        btnRetirarse.setEnabled(false);
        timer=true;
        iniciarTimer(evt);
    }//GEN-LAST:event_btnContinuarActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        millonario.resetCounter();
        cargarPregunta();
        btnReset.setEnabled(false);
        continuar = true;
        millonario.setAyuda_50(true);
        btnAyuda50.setEnabled(true);
        timer=true;
        iniciarTimer(evt);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnRetirarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarseActionPerformed
        btnReset.setEnabled(true);
        btnRetirarse.setEnabled(false);
        btnContinuar.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Has ganado " + txtGanado.getValue());
    }//GEN-LAST:event_btnRetirarseActionPerformed

    private void btnAyuda50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyuda50ActionPerformed
        for (Integer i : millonario.incorrectas()) {
            pnlRespuestas.getComponents()[i].setBackground(Color.WHITE);
            pnlRespuestas.getComponents()[i].setEnabled(false);
        }
        btnAyuda50.setEnabled(false);
    }//GEN-LAST:event_btnAyuda50ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Preguntas().setVisible(true);
            }
        });
    }

    private void responder(ActionEvent evt) {
        task.cancel(true);
        timer=false;
        if (continuar) {
            continuar = false;
            JButton jb = ((JButton) evt.getSource());
            jb.setBackground(Color.orange);
            int index = 0, escogida = -1;
            for (Component c : pnlRespuestas.getComponents()) {
                if (c.equals(jb)) {
                    escogida = index;
                }
                index++;
            }
            resaltarCorrecta();
            if (escogida == actual.getCorrecta()) {
                respuestaCorrecta();
            } else {
                respuestaIncorrecta();
            }

        }
    }

    private void respuestaCorrecta() {
        btnContinuar.setEnabled(true);
        btnRetirarse.setEnabled(true);
        txtGanado.setValue((millonario.getPreguntaActual() * 50000));
        txtAsegurado.setValue((millonario.getAsegurado() * 50000));
        //JOptionPane.showMessageDialog(this, "ok");
    }

    private void respuestaIncorrecta() {
        btnReset.setEnabled(true);
        btnContinuar.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Has ganado " + txtAsegurado.getValue());
        btnAyuda50.setEnabled(false);
        for(Component c:pnlRespuestas.getComponents())
            c.setEnabled(false);
        //JOptionPane.showMessageDialog(this, "perdiste");
    }

    private void resaltarCorrecta() {
        Component[] c = pnlRespuestas.getComponents();
        c[actual.getCorrecta()].setBackground(Color.GREEN);
    }

    public void cargarPregunta() {
        //pnlRespuestas = new javax.swing.JPanel();
        //pnlRespuestas.setBorder(javax.swing.BorderFactory.createTitledBorder("Presione su respuesta"));
        //pnlRespuestas.setLayout(new java.awt.GridLayout(0, 1));     
        actual = millonario.getPregunta();
        cargarPregunta(actual);
    }

    public void cargarPregunta(Pregunta p) {
        lblPregunta.setText(p.getPregunta());
        String[] opciones = p.getOpciones();
        for (String opcion : opciones) {
            JButton btnOpcion = new JButton(opcion);
            btnOpcion.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    responder(evt);
                }
            });
            pnlRespuestas.add(btnOpcion);
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    class Task extends SwingWorker<Void, Void> {

        @Override
        public Void doInBackground() {

            int progress = 0;
            // Initialize progress property.
            setProgress(0);
            while (progress < 100&&continuar) {
                // Sleep for up to one second.
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ignore) {
                }
                // Make random progress.
                progress += 10;
                setProgress(Math.min(progress, 100));
            }
            return null;
        }

        /*
         * Executed in event dispatching thread
         */
        @Override
        public void done() {
            if(!timer){
                JOptionPane.showMessageDialog(null, "Se acabo el tiempo");
                respuestaIncorrecta();
            }
        }
    }
    
    public void iniciarTimer(ActionEvent evt){
        task = new Task();
    task.addPropertyChangeListener(this);
    task.execute();
    }
    
      /**
   * Invoked when task's progress property changes.
     * @param evt
   */
    @Override
  public void propertyChange(PropertyChangeEvent evt) {
    if ("progress".equals(evt.getPropertyName())) {
      int progress = (Integer) evt.getNewValue();
      prgTiempo.setValue(progress);
    }
  }
private Task task;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyuda50;
    private javax.swing.JButton btnContinuar;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnRetirarse;
    private javax.swing.JLabel lblPregunta;
    private javax.swing.JPanel pnlRespuestas;
    private javax.swing.JProgressBar prgTiempo;
    private javax.swing.JFormattedTextField txtAsegurado;
    private javax.swing.JFormattedTextField txtGanado;
    // End of variables declaration//GEN-END:variables
}
